<Window x:Class="StaticBalancing.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StaticBalancing"
        xmlns:oxy="http://oxyplot.org/wpf"
        mc:Ignorable="d"
        Title="Static Balancing Tool" Height="980" Width="900" ResizeMode="NoResize">
    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <!--<RowDefinition Height = "25*"/>-->
            <RowDefinition Height = "550"/>
            <RowDefinition Height = "400"/>
        </Grid.RowDefinitions>

        <!--<Grid Name= "MenuGrid" Grid.Row="0">
            <DockPanel Name="MenuPanel"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Menu DockPanel.Dock="Top">
                    <MenuItem Header="_System"></MenuItem>
                    <MenuItem Header="_Help"></MenuItem>
                </Menu>
            </DockPanel>
        </Grid>-->

        <Grid Name="SystemGrid" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="500"/>
            </Grid.RowDefinitions>

            <Grid Name="PresetGrid" Grid.Row="0">
                <Label x:Name="ConfigFilePathLabel" Content="System Configuration" Height ="35" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,6,0,0" Width="145" FontSize="14" Padding="5"/>
                <TextBox x:Name="ConfigFilePathTextbox" HorizontalAlignment="Left" Height="35" Margin="150,6,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="435" Text="{Binding SystemConfigFile, Mode=TwoWay, UpdateSourceTrigger = PropertyChanged}" FontSize="14" Padding="5" IsReadOnly="True" MouseDoubleClick="ConfigFilePathTextbox_MouseDoubleClick"/>
                <Button x:Name="BrowseButton" Content="Browse" Height="35" HorizontalAlignment="Left" Margin="590,6,0,0" VerticalAlignment="Top" Width="90" Click="BrowseButton_Click"/>
                <Label x:Name="StatusLabel" HorizontalAlignment="Left" Margin="710,6,0,0" VerticalAlignment="Top" Width="175" Height="35" FontSize="14" Padding="5" Content="{Binding Path=StatusLabelContent, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding StatusLabelColor, UpdateSourceTrigger = PropertyChanged}" Grid.ColumnSpan="2"/>
            </Grid>

            <Grid Name="InfoDisplayGrid" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="500"/>
                </Grid.ColumnDefinitions>

                <Grid Name="SystemInfoGrid" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"/>
                        <RowDefinition Height="250"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <Grid Name="InfoGrid" Grid.Row="0">
                        <TabControl Name="SystemInfoTabControl">
                            <TabItem Name="SystemInfo" Header="SystemInfo">
                                <Grid>
                                    <Label x:Name="CTModelNameLabel" Content="CT Model" HorizontalAlignment="Left" Margin="5,10,0,0" VerticalAlignment="Top" Width="70" Height="30" FontSize="13" FontWeight="Bold"/>
                                    <Label x:Name="CTModelValueLabel" Content="{Binding Path=SelectedModel, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="80,10,0,0" VerticalAlignment="Top" Width="100" Height="30"/>

                                    <Label x:Name="SerialNumNameLabel" Content="Serial#" HorizontalAlignment="Left" Margin="180,10,0,0" VerticalAlignment="Top" Width="54" Height="30" FontSize="13" FontWeight="Bold"/>
                                    <TextBox x:Name="SerialNumValueLabel" Text="" HorizontalAlignment="Left" Margin="234,10,0,0" VerticalAlignment="Top" Width="147" Height="30" TextChanged="SerialNumValueLabel_TextChanged"/>

                                    <Label x:Name="MaxImbaNameLabel" Content="Max.Imbalance" HorizontalAlignment="Left" Margin="5,90,0,0" VerticalAlignment="Top" Width="105" Height="30" FontSize="13" FontWeight="Bold"/>
                                    <Label x:Name="MaxImbaValueLabel" Content="{Binding Path=SelectedModelMaxImba, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="110,90,0,0" VerticalAlignment="Top" Width="50" Height="30"/>
                                    <Label x:Name="MaxImbaUnitLabel" Content="g*m" HorizontalAlignment="Left" Margin="165,90,0,0" VerticalAlignment="Top" Width="100" Height="30"/>

                                    <Label x:Name="MaxSpeNameLabel" Content="Max.Speed" HorizontalAlignment="Left" Margin="5,50,0,0" VerticalAlignment="Top" Width="105" Height="30" FontSize="13" FontWeight="Bold"/>
                                    <Label x:Name="MaxSpeValueLabel" Content="{Binding Path=SelectedModelMaxSpeed, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="110,50,0,0" VerticalAlignment="Top" Width="50" Height="30"/>
                                    <Label x:Name="MaxSpeUnitLabel" Content="rpm" HorizontalAlignment="Left" Margin="165,50,0,0" VerticalAlignment="Top" Width="100" Height="30"/>

                                    <Label x:Name="OffsetNameLabel" Content="Home Offset" HorizontalAlignment="Left" Margin="5,130,0,0" VerticalAlignment="Top" Width="105" Height="30" FontSize="13" FontWeight="Bold"/>
                                    <Label x:Name="OffsetValueLabel" Content="{Binding Path=SelectedModelOffset, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="110,130,0,0" VerticalAlignment="Top" Width="50" Height="30"/>
                                    <Label x:Name="OffsetUnitLabel" Content="degree" HorizontalAlignment="Left" Margin="165,130,0,0" VerticalAlignment="Top" Width="100" Height="30"/>

                                </Grid>
                            </TabItem>
                            <TabItem Name="BalancePosition" Header="BalancePosition">
                                <DataGrid Name="BPDataGrid" AutoGenerateColumns="False" IsReadOnly="True" Background="WhiteSmoke" AlternatingRowBackground="Wheat" ItemsSource="{Binding Path=SelectedBalancePositions, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Visible">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Balance Position" Width="100" Binding="{Binding ID}"/>
                                        <DataGridTextColumn Header="Radius (mm)" Width="80" Binding="{Binding Radius}"/>
                                        <DataGridTextColumn Header="Angle (deg)" Width="80" Binding="{Binding Angle}"/>
                                        <DataGridTextColumn Header="Max.StackHeight" Width="105" Binding="{Binding MaxStackHeight}"/>
                                        <DataGridTextColumn Header="Stack Driection" Width="100" Binding="{Binding StackDir}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>
                            <TabItem Name="Counter" Header="Counter">
                                <DataGrid Name="CounterDataGrid" AutoGenerateColumns="False" IsReadOnly="True" Background="WhiteSmoke" AlternatingRowBackground="Wheat" ItemsSource="{Binding Path=SelectedCounters, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Counter" Width="105" Binding="{Binding PartNumber}"/>
                                        <DataGridTextColumn Header="Mass (kg)" Width="105" Binding="{Binding Mass}"/>
                                        <DataGridTextColumn Header="Thickness (mm)" Width="105" Binding="{Binding Thickness}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>

                        </TabControl>
                    </Grid>

                    <Grid Name="BalanceCalculationGrid" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Label x:Name="CaliSpeedNameLabel" Content="Speed(rpm)" HorizontalAlignment="Left" Margin="5,10,0,0" VerticalAlignment="Top" Width="72" Height="37"/>
                            <Label x:Name="CaliSpeedValueLabel" Content="{Binding Path=CalibrationResult.Speed, StringFormat={}{0:F4}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="77,10,0,0" VerticalAlignment="Top" Width="97" Height="37"/>

                            <Label x:Name="CaliSpeedVarNameLabel" Content="Speed Variation" HorizontalAlignment="Left" Margin="195,10,0,0" VerticalAlignment="Top" Width="94" Height="37"/>
                            <Label x:Name="CaliSpeedVarValueLabel" Content="{Binding Path=CalibrationResult.SpeedVariation, StringFormat={}{0:F4}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="294,10,0,0" VerticalAlignment="Top" Width="96" Height="37"/>

                            <Label x:Name="CaliPhaseNameLabel" Content="Phase" HorizontalAlignment="Left" Margin="240,42,0,0" VerticalAlignment="Top" Width="49" Height="37"/>
                            <Label x:Name="CaliPhaseValueLabel" Content="{Binding Path=CalibrationResult.Phase, StringFormat={}{0:F4},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="291,42,0,0" VerticalAlignment="Top" Width="99" Height="37"/>

                            <Label x:Name="CaliResImbaNameLabel" Content="Residual Imblance (g*m)" HorizontalAlignment="Left" Margin="5,42,0,0" VerticalAlignment="Top" Width="139" Height="37"/>
                            <Label x:Name="CaliResImbaValueLabel" Content="{Binding Path=CalibrationResult.ResidualImblance, StringFormat={}{0:F4}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="144,42,0,0" VerticalAlignment="Top" Width="96" Height="37" RenderTransformOrigin="0.507,0.486"/>

                            <Label x:Name="CaliFMaxSpeedNameLabel" Content="Force @Max Speed (N)" HorizontalAlignment="Left" Margin="5,84,0,-0.2" VerticalAlignment="Top" Width="132" Height="37"/>
                            <Label x:Name="CaliFMaxSpeedValueLabel" Content="{Binding Path=CalibrationResult.ForceAtMaxSpeed, StringFormat={}{0:F4}, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="144,84,0,-0.2" VerticalAlignment="Top" Width="91" Height="37"/>
                        </Grid>
                        <Grid Grid.Row="1">
                            <DataGrid Name="ForceVectorDataGrid" AutoGenerateColumns="False" IsReadOnly="True" Background="WhiteSmoke" ItemsSource="{Binding Path=ForceVectors, UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Balance Position" Width="5*" Binding="{Binding ID}"/>
                                    <DataGridTextColumn Header="Phase" Width="3*" Binding="{Binding CoefDiffVector.Phase, StringFormat={}{0:F4}}"/>
                                    <DataGridTextColumn Header="Weight Change(kg)" Width="5*" Binding="{Binding WeightChange, StringFormat={}{0:F4}}"/>
                                    <DataGridTextColumn Header="Imbalance (g*m)" Width="5*" Binding="{Binding Imbalance, StringFormat={}{0:F4}}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>

                    <Grid Name="ButtonGrid"  Grid.Row="2">
                        <Button x:Name="SystemSelectButton" Content="Select System" Height="35" HorizontalAlignment="Left" Margin="50,7,0,0" VerticalAlignment="Top" Width="90" Click="SystemSelectButton_Click"/>
                        <Button x:Name="CalibrateButton" Content="Calibrate" Height="35" HorizontalAlignment="Right" Margin="0,7,50,0" VerticalAlignment="Top" Width="90" Click="CalibrateButton_Click"/>
                    </Grid>

                </Grid>

                <Grid Name ="ImbalanceVectorPlotGrid" Grid.Column="1">
                    <Grid.Background>
                        <ImageBrush Opacity="1" ImageSource="pack://application:,,,/StaticBalancing;component/Resource/Images/CTRotorWithAngle.png" Stretch="UniformToFill" TileMode="FlipX"/>
                    </Grid.Background>
                </Grid>
            </Grid>

        </Grid>

        <Grid Name="HisotryDataGrid" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50*"/>
                <RowDefinition Height="50*"/>
            </Grid.RowDefinitions>
            <Grid Name="BalanceSinusoidPlotGrid" Grid.Row="0">
                <oxy:PlotView Name ="DataPlotView"/>
            </Grid>

            <Grid Name="BalancingDataGrid" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="750"/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>

                <Grid Name="BalanceLogGrid" Grid.Column="0">
                    <DataGrid SelectionChanged="HistoryResultDataGrid_SelectionChanged" x:Name="HistoryResultDataGrid" AutoGenerateColumns="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Auto" Background="White" SelectionUnit="FullRow">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="SUCCESS_COLOR" Color="LightGreen" />
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="SUCCESS">
                                        <Setter Property="Background" Value="{StaticResource SUCCESS_COLOR}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>

                    </DataGrid>
                </Grid>
                <Grid Name="HistoryDataOperationGrid" Grid.Column="1">
                    <Button x:Name="MeasureButton" Content="Measure" HorizontalAlignment="Left" Margin="30,58,0,0" VerticalAlignment="Top" Width="80" Height="30" FontSize="14"/>
                    <Button x:Name="LoadButton" Content="Import" HorizontalAlignment="Left" Margin="30,93,0,0" VerticalAlignment="Top" Width="80" Height="30" FontSize="14"/>
                    <Button x:Name="DumpButton" Content="Export" HorizontalAlignment="Left" Margin="30,128,0,0" VerticalAlignment="Top" Width="80" Height="30" FontSize="14"/>
                    <Button x:Name="DeleteButton" Content="Delete" HorizontalAlignment="Left" Margin="30,23,0,0" VerticalAlignment="Top" Width="80" Height="30" FontSize="14"/>
                </Grid>
            </Grid>
        </Grid>


    </Grid>
</Window>
